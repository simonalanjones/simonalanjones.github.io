<?php

class CSVDataHandler
{
    private $csvFile;
    private $data;

    public function __construct($csvFilePath)
    {
        $this->csvFile = $csvFilePath;
        $this->data = $this->readCSV();
    }

    private function readCSV()
    {
        $data = [];
        if (($handle = fopen($this->csvFile, "r")) !== false) {
            while (($row = fgetcsv($handle, 0, "\t")) !== false) {
                $data[] = $row;
            }
            fclose($handle);
        }
        return $data;
    }

    private function filterData($code)
    {
        $filteredData = [];

        foreach ($this->data as $row) {
            $polType = $row[2];
            $polAncCode = $row[3];
            $polCoverCode = ($row[4] == '') ? '' : $row[4];

            if (($polType == 'IPD' && $code[0] == 'IPD' && $polAncCode == $code[1]) ||
                ($polType == 'CAR' && $code[0] != 'IPD' && $polAncCode == $code[0] && $polCoverCode == $code[1])) {
                $filteredData[] = $row;
            }
        }

        return $filteredData;
    }

    public function retrieveData($code = false)
    {
        // Check that code is valid - i.e. 3 alpha characters
        if (!preg_match('/^[a-zA-Z\-0-9]{2,4}$/', $code[0])) {
            return false;
        }

        $resultArr = [];

        // Filter data based on the code
        $filteredData = $this->filterData($code);

        // Select most recent policy book which has end date of 0000-00-00
        $newest = $this->findNewestPolicy($filteredData);
        if ($newest) {
            $resultArr[] = [$newest[5], $newest[7]];
        }

        // Select next most recent group of policy books
        $previous = $this->findPreviousPolicies($filteredData);
        foreach ($previous as $row) {
            $resultArr[] = [$row[5], $row[6], $row[7]];
        }

        // Encode the results array for JSON
        return json_encode($resultArr);
    }

    private function findNewestPolicy($data)
    {
        $newest = null;
        foreach ($data as $row) {
            if ($row[6] == '0000-00-00') {
                if (!$newest || strtotime($row[5]) > strtotime($newest[5])) {
                    $newest = $row;
                }
            }
        }
        return $newest;
    }

    private function findPreviousPolicies($data)
    {
        $previous = [];
        foreach ($data as $row) {
            if ($row[6] != '0000-00-00' && strtotime($row[6]) > strtotime('-13 months')) {
                $previous[] = $row;
            }
        }
        // Sort the previous policies by start date in descending order
        usort($previous, function ($a, $b) {
            return strtotime($b[5]) - strtotime($a[5]);
        });
        return $previous;
    }
}

// Usage example
if (isset($_POST['code'])) {
    $code = explode('-', $_POST['code']);
    $csvDataHandler = new CSVDataHandler('path/to/your/csv/file.csv');
    $jsonData = $csvDataHandler->retrieveData($code);
    echo $jsonData;
}
